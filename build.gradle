plugins {
    id 'org.springframework.boot' version '2.7.1'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'application'

}



mainClassName = 'kz/halykacademy/bookstore/Main'
group 'org.example'
version '1.0-SNAPSHOT'


repositories {
    mavenCentral()
}
compileJava.options.encoding = 'UTF-8'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.flywaydb:flyway-core'


    implementation 'org.postgresql:postgresql:42.4.0'

    implementation 'org.modelmapper:modelmapper:3.1.0'


/*
    implementation 'org.hibernate:hibernate-core'
*/




       implementation 'org.hibernate:hibernate-entitymanager:5.2.3.Final'



/*
       implementation 'javax.xml.bind:jaxb-api:2.4.0-b180830.0359'
*/


    implementation 'org.mapstruct:mapstruct:1.5.1.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.1.Final'

    // If you are using mapstruct in test code
    runtimeOnly 'org.postgresql:postgresql'


    testImplementation 'org.springframework.boot:spring-boot-starter-test'

}

test {
    useJUnitPlatform()
}
test {
    systemProperty "file.encoding", "utf-8"
}